Задание 1

Напишите небольшой библиотечный справочник, где хранится информация о книгах.
1. Создайте класс Book, который будет содержать в себе данные о названии, авторе и годе публикации книги.
   Убедитесь, что типы полей класса Book выбраны правильно: это String, Author и int.
2. Создайте класс Author, который содержит в себе данные об имени и фамилии автора.
3. Напишите конструкторы для обоих классов, заполняющие все поля.
4. Создайте геттеры для всех полей автора и всех полей книги.
5. Создайте сеттер для поля «Год публикации» у книги.
6. В методе main создайте несколько объектов «Книга» (достаточно двух) и несколько объектов «Автор» (достаточно тоже двух)
   и инициализируйте их. Учтите, что авторы являются обязательными и книги не могут создаваться без авторов. Метод main
   не должен находиться в классах Book и Author. Создайте отдельный класс для запуска приложения и объявите метод main в нем.
7. В том же методе main измените год публикации одной из книг с помощью сеттера.
   Теперь, когда вы изучили геттеры и сеттеры, не оставляйте поля открытыми — то есть без модификатора доступа private.

************************************************************************************************************************

Задание 2

- Необходимо в классе с методом main создать массив объектов типа Book и положить туда созданные книги.
- Написать статические методы для работы с массивом в классе, где располагается метод main:
    1. Добавить книгу (найти свободную ячейку массива и положить туда книгу). Учесть, что этот метод может быть вызван
       любое количество раз (от 1 до 5) и каждая новая книга должна успешно укладываться в массив.
    2. Напечатать в консоль все книги из массива в следующем формате:
        “Stephen King: The Stand: 1978”

************************************************************************************************************************

Задание 3

1. Создать класс Library, который будет иметь своим полем массив из прошлого уровня.
   Учесть, что доступ к нему должен быть только из Library (private поле), а сеттеры и геттеры отсутствуют.
   Работать с массивом можно только через внутренние нестатические методы класса Library.
2. Конструктор класса должен получать в качестве параметра размер массива и инициализировать в себе поле массива тем размером,
   что пришел параметром.
3. Перенести методы из прошлого уровня в класс Library, сделать их нестатическими.
4. Создать новые нестатические методы в классе Library:
    a. Напечатать информацию о книге по ее названию, которое приходит в метод в качестве параметра.
       Формат: “The Stand by Stephen King was published in 1978”
    b. Изменить год публикации книги по ее названию.
       В метод подаются два параметра, а именно: название и новый год публикации. Нужно найти книгу и изменить ее год публикации.

************************************************************************************************************************

Задание 4

Реализуйте методы toString, equals и hashCode в классах Author и Book, которые вы создали на прошлом уроке. Обратите внимание,
что toString книги не должен дублировать код из toString автора, а должен делегировать (вызывать) его версию метода.

************************************************************************************************************************

Задание 5

Реализуйте метод toString в классе Library, который выводит все книги библиотеки в формате:
Library:
книга1
книга2
Использовать геттеры при написании этого метода запрещено. Нужно корректно делегировать формирование строки методу toString из книги.

************************************************************************************************************************

Происхождение видов Чарлза Дарвина 1859.
Нейромант Уильяма Гибсона 1984.